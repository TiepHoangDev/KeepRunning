<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column_KieuCheck.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>172, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>285, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wABcbE7NHGzPFFwsz1Qc7Q8MwD/
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGbMMwVwtD1tcLM9sXGzPHxysz1lcrM9ZXC0
        O31wsz2xcbM7bGbMMwUAAAAAAAAAAAAAAAAAAAAAAAAAAHCvQBBxtDypcrQ9XHGzPHxxszzecbM8/3Gz
        PP9xszzdcbM8fHCyPF1wsz2ocK9AEAAAAAAAAAAAAAAAAGbMMwVxszyncrM7SnG0O99xszz/cbM8/3Gz
        PP9xszz/cbM8/3GzPP9xszzecrM7SnK0PKaAv0AEAAAAAAAAAAByszxucbI7VnGzPN1xszz/cbM8/3Gz
        PP9xszz/cbM8/3GzPP9xszz/cbM8/3CzPNxwsjxZcbI8agAAAAAA/wABcbQ8qXGzPINxszz/cbM87XGz
        PIdxsz2TcbM8+HGzPPlxsjyIcbM8g3GzPPJxszz/cbQ7gXGzPKoA/wABcLU6MHK0PHdxszzecbM8/3Ky
        PWBxszzHcbQ7sHC0O31ytD2LcLM9qHCzPMNytTxucbM8/3CzPNxxtD16cbU+LXCzPVBytD1ccbM8/3Gz
        PP9xszz0cbM8/3GzPM1xsj1xcbc9WHGzPP9xszz/dLM8UXGzPP9xszz+cLI8XXGyPU9wtD1LcbM923Gz
        PP9xszz/cbM89nGzPNRxsjsrcbM80nG1PFpxszz+cbM8/3SzPFFxszz/cbM8/nCyPF1ytDtOcLQ+KXGz
        PP9xszz/cbM8/3KyO5JyszydcbM8fHC0PLpytD2LcLM9qHCzPMNytD1pcbM8/3CzPNxxtD16b7E9LgD/
        AAFxsz3bcbM8/3GzPP9xszz3cbQ7jnC0O59xszz+cbM8+3GzPIxxszyDcbM88XGzPP9xszyDcbM8rgD/
        AAEAAAAAcrI8e3CzPWRxtTxIcrQ8VXGzPMVxszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszzhcrQ9XHGz
        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
        PP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xtDuBaqpADHGz
        PNlwszyWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcbM8zHKyPHtmszMKgIAAAnC0PJhxszz/cbM8/3Gz
        PP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/crM8nYCA
        AAJxsjytcbM84m22PRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxszzMcrI8e3G0Oz1wtDyEAP8AAXCz
        PYZxszz8cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/nGy
        PX6AgAACcbM8jHGzPPZwsz0yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHGzPMxysjx7cbQ7PXGz
        PP9yszubgL9ACHO0PDNysz3KcbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/3GzPP9xszz/cbM8/3Gz
        PMxytDtBZrMzCnGzPKpxszz3cLM9UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcbM8zHKy
        PHtxtDs9cbM8/3GzPO1xszzWc7E7RQD/AAFysjs4cLI9j3GzPN1xszz/cbM8/3GzPP9xszz8cbM83XGz
        PZdysztKgIAAAnK0O05xtDzVcLM85W+yOjUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABwtDy6crM8r3CzPH9xszzzb7E3F3GyO6Nxszz/cLM8w3C0O1J2sTsNAAAAAHG4ORJxtDwicbM5G4C/
        QAQAAAAAdbVAGHKyO2dxszzIcbM8/HKzPJ1wuD0ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHCzOjlxszzmcbM89nKzPWUAAAAAAAAAAG+xPS5yszubcbM89HGzPPtxszzRcrM9pHGy
        PJlwtDufcbM9tXGzPNJxszz9cbM87nGzPaBwtD4pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAAKAqisGAAAAAAAAAAAAAAAAAAAAAAAAAACAqisGc7M8PHKy
        PHtxsz2TcbM8p3GzPKpwszyhcbI9fnKzPUOAv0AEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////D///8AD//8f+P/+cA5//MADP/kAAZ/yAABP5gAAZ+wA
        ADfIAAAT2Dw8G9BmZgvQwkILkAJDCZAGQwmADEMJgARDCcBGQgvAZGYLwDw8G8AAABPnwAA378AAJ+4A
        AE/tAAGf7MADP+xwDn/lH/j/88AD///8P///////
</value>
  </data>
</root>